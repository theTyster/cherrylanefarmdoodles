@use "@styles/_theme.module.scss" as Theme;
@use "@styles/_mixins.scss" as Mixins;
@use "@styles/root-layout.module.scss";

$buttonPos: calc(
  Theme.$spaceBetweenElements + (Theme.$spaceBetweenElements / 2)
);
$svgWxH: 57px;
.container {
  display: flex;
  width: 100%;
  height: 100vh;
  opacity: 0;
  overflow: scroll;
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 500;
  top: 0;
  left: 0;
}

.child {
  @extend .wood-layout;
  flex-direction: column;
  margin: Theme.$spaceBetweenElements;
  width: fit-content;
  position: relative;
  background-color: Theme.$darkPrimary;
  padding: Theme.$spaceBetweenElements / 2;
  border-radius: Theme.$bigButtonRadius;
  @include Mixins.mediaQuery(Theme.$SmPhoneViewport) {
    margin: 0;
  }
}

button.exit {
  display: none;
}

@include Mixins.mediaQuery(Theme.$tabletViewport) {
  button.exit {
    display: block;
    border: none;
    position: fixed;
    background: none;
    top: $buttonPos;
    left: $buttonPos;
    cursor: pointer;
    z-index: 501;
    background-color: Theme.$primary;
    border-radius: 100%;
    padding: 20px;
    @include Mixins.scaleOnHover;
    &:active {
      transform: scale(1);
    }
  }

  svg.x {
    width: $svgWxH;
    height: $svgWxH;
    margin-top: 5px;
    margin-left: 2.5px;
    fill: Theme.$lightPrimary;
  }

  .backward,
  .forward {
    fill: Theme.$lightPrimary;
  }
}

@include Mixins.mediaQuery(Theme.$LgPhoneViewport) {
  button.exit {
    display: block;
    scale: 0.5;
    position: sticky;
    min-width: 115px;
    min-height: 115px;
    top: 0;
    &:hover {
      background-color: Theme.$lightPrimary;
      .backward,
      .forward {
        fill: Theme.$darkPrimary;
      }
    }
  }
  .backdrop {
    margin-top: -15px;
  }
}

@include Mixins.mediaQuery(Theme.$microViewport) {
  button.exit,
  .child {
    margin: unset;
    padding: unset;
    left: unset;
  }
}

@media screen and (max-height: 300px) {
  button.exit {
    position: static;
  }
}
