@use "@styles/_theme.module.scss" as Theme;

$grid-margin: 20px;

div.showcase {
  display: flex;
  flex-wrap: wrap;
  gap: $grid-margin;
  justify-content: center;
  align-items: center;
  padding: Theme.$spaceBetweenElements 0 Theme.$spaceBetweenElements 0;
  hr {
    width: 100%;
    height: 26px;
    background-repeat: repeat-x;
    background-size: 33.33% 100%;
    background-position-x: left;
    background-clip: content-box;
    @include Theme.mediaQuery(Theme.$tabletViewport) {
      background-size: 100% 100%;
    }
  }
  a,
  button,
  div.showcase-item {
    &:first-child {
      /* transition: all 0.2s; */
      flex: 1 0 calc(100% - $grid-margin);
      display: flex;
      justify-content:center;
      img {
        //        transition: all 0.2s;
        //        box-shadow: 0px 5px 20px 5px Theme.$primary;
        object-fit: cover;
        width: 50%;
        height: auto;
        //        &:hover {
        //          box-shadow: 0px 10px 20px 5px Theme.$primary;
        //          transform: translateY(10px);
        //        }
        //        &:active {
        //          box-shadow: revert;
        //        }
        //      }
      }
      @include Theme.mediaQuery(Theme.$tabletViewport) {
        flex: 1 0 calc(50% - $grid-margin * 2);
      }
      @include Theme.mediaQuery(Theme.$LgPhoneViewport) {
        flex: 1 0 calc(100% - $grid-margin * 2);
      }
      h3 {
        transition: all 0.2s;
        @include Theme.mediaQuery(Theme.$tabletViewport) {
          position: static;
          opacity: 1;
          width: 100%;
          height: auto;
          margin-bottom: calc($grid-margin/2);
          background-color: Theme.$darkPrimary;
        }
        line-height: 0;
        padding: 0;
        background-color: inherit;
        position: relative !important;
        text-decoration: none;
        border-radius: Theme.$buttonRadius;
        flex: 0 1 calc(33.33% - $grid-margin);
        display: flex;
        position: absolute; // relative to button.
        width: 100%;
        height: auto;
        opacity: 0;
        margin: 0;
        text-align: center;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        border-radius: Theme.$buttonRadius;
      }
      //    &:hover,
      //    &:active,
      //    &:focus-visible {
      //      h3 {
      //        opacity: 1;
      //      }
      //      background-color: inherit;
    }
    img {
      box-sizing: border-box; // sets how the total width and height is calculated. In this case it's calculated by the border box instead of the content box.
      border-radius: Theme.$buttonRadius;
      outline: 5px solid Theme.$primary;
      outline-offset: -4px;
    }
  }
  button {
    padding: 0;
    background-color: inherit;
    border: none;
    cursor: pointer;
  }
  div.currently-showcased {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}
