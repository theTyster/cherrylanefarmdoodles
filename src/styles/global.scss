@use "../styles/theme.module.scss" as Theme;
@use "../styles/mixins.scss" as Mixins;

// Globals{
@include Mixins.setTextValues() {
  color: Theme.$black;
}

html * {
  box-sizing: border-box; // who knows. It might be a good practice.
}

// Oreo focus for better accessibility
:focus-visible {
  outline: 9px double Theme.$secondaryGreen;
  box-shadow: 0 0 0 6px Theme.$lightSecondaryGreen !important;
  border: none !important;
  z-index: 999 !important; // Focus should be on top of everything.
}
html {
  width: fit-content;
  height: fit-content;
}

p {
  font-size: 18px;
  line-height: 1.5;
  font-weight: 400;
}

h1 {
  resize: auto;
  text-align: center;
  font-size: 51px;
  font-weight: 700;
}
h2 {
  text-align: center;
  font-size: 41px;
  font-weight: 700;
}
h3 {
  text-align: center;
  font-size: 31px;
  font-weight: 700;
}
h4 {
  text-align: left;
  font-size: 21px;
  font-weight: 700;
}
h1.title {
  font-size: 40px;
}

b {
  font-weight: 700;
  margin: 0 !important;
}

a {
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
  &:visited {
    color: Theme.$tertiaryCherry;
  }
}

@include Mixins.setTextValues() {
  word-break: break-word;
}

footer {
  background-color: Theme.$secondaryGreen;
  p {
    color: Theme.$lightSecondaryGreen;
    text-align: center;
  }
}

// }

// Layout Sections{
main {
  min-height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
}

// All layouts
div[class$="-layout"] {
  display: flex;
  flex-basis: 0;
  div.right-flex,
  div.left-flex {
    flex: 1 1 0;
  }
  div.content-box {
    flex: 0 1 Theme.$tabletViewport;
    display: flex;
    flex-direction: column;
    align-items: center;
    // Do not Add:
    // padding;
    // margin;
  }
  @include Mixins.mediaQuery(Theme.$tabletViewport) {
    div.content-box {
      flex: 0 1 Theme.$LgPhoneViewport;
    }
  }

  @include Mixins.mediaQuery(Theme.$LgPhoneViewport) {
    div.content-box {
      flex: 0 1 Theme.$SmPhoneViewport;
    }
  }

  @include Mixins.mediaQuery(Theme.$SmPhoneViewport) {
    div.content-box {
      flex: 0 1 Theme.$microViewport;
    }
  }
  @include Mixins.mediaQuery(Theme.$microViewport) {
    @include Mixins.setImageValues() {
      display: block;
      width: fit-content;
      width: 100%;
      height: auto;
    }
    @include Mixins.setTextValues() {
      line-break: anywhere;
    }
  }
}

div.white-layout {
  flex: 1 1;
  padding: 100px 0;
  background-color: white;
}

div.wood-layout {
  flex: 2 2;
  padding: 100px 0;
  background-color: Theme.$darkPrimary;
  &.wood-layout {
    background-position: center;
    background-size: cover;
  }
  @include Mixins.setTextValues() {
    color: Theme.$lightPrimary;
  }
}

div.tan-layout {
  flex: 1 1;
  padding: 100px 0;
  background-color: Theme.$lightPrimary;
}

// }
// vim: foldmethod=marker foldmarker={,}
