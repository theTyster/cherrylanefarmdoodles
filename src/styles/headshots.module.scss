@use "@styles/_theme.module.scss" as Theme;

/*Large*/
@mixin root-lg($className: null) {
  @if $className == null {
    $className: "root_lg";
  }
  .#{$className} {
    aspect-ratio: 3/4 !important;
    max-width: Theme.$Headshots_Lg !important;
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: Theme.$bigButtonRadius;
    box-sizing: content-box;
    outline: Theme.$outlineWidth solid Theme.$gray;
    //  background-color: Theme.$primary;
    //  transition-property: box-shadow;
    //  transition-duration: #{Theme.$transitionShort}s;
    //  @include Theme.mediaQuery(Theme.$LgPhoneViewport) {
    //    width: calc(Theme.$Headshots_Sm - ((Theme.$imgPad * 2) + Theme.$outlineWidth));
    //    height: auto;
    //  }
    //  @include Theme.mediaQuery(Theme.$SmPhoneViewport) {
    //    height: auto;
    //  }
    @content;
  }
}
@include root-lg;

/*Small*/
.root_sm {
  padding: Theme.$imgPad;
  aspect-ratio: 1/1 !important;
  max-width: Theme.$Headshots_Sm !important;
  object-fit: scale-down;
  border-radius: Theme.$Headshots_SmRadius;
  cursor: pointer;
  background-color: Theme.$white;
  transition-property: box-shadow;
  transition-duration: #{Theme.$transitionShort}s;
  &:active {
    box-shadow: none;
  }
  @include Theme.mediaQuery(Theme.$LgPhoneViewport) {
    width: Theme.$Headshots_Sm;
    height: auto;
  }
  @include Theme.mediaQuery(Theme.$SmPhoneViewport) {
    width: 100%;
    height: auto;
  }
}

.mom {
  outline: Theme.$momOutline;
  outline-offset: -1px;
  @include Theme.imageHover(Theme.$darkMom, Theme.$lightMom);
}

.dad {
  outline: Theme.$dadOutline;
  outline-offset: -1px;
  @include Theme.imageHover(Theme.$darkDad, Theme.$lightDad);
}

.unrecordedDog {
  outline: Theme.$unrecordedDogOutline;
  outline-offset: -1px;
  cursor: auto;
  box-shadow: none;
  &:active {
    box-shadow: none;
  }
}
