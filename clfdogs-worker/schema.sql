DROP TABLE IF EXISTS Dogs;

DROP TABLE IF EXISTS MOMS;

DROP TABLE IF EXISTS Litters;

DROP TABLE IF EXISTS Images;

DROP TABLE IF EXISTS DIL;

CREATE TABLE Dogs (
    ID integer PRIMARY KEY AUTOINCREMENT,
    BIRTHDAY date NOT NULL,
    BREEDER text NOT NULL,
    DOG_NAME text,
    EYE_COLOR text,
    IMAGE_CIRCLE text NOT NULL,
    IMAGE_SQUARE text,
    LITTER_ID integer NOT NULL,
    NOSE_COLOR text NOT NULL,
    COLLAR_COLOR text,
    IS_AVAILABLE boolean CHECK (IS_AVAILABLE IN (0, 1)) NOT NULL,
    FAVORITE_ACTIVITIES text,
    IS_RETIRED boolean CHECK (IS_RETIRED IN (0, 1)),
    MATCHED_WITH integer,
    PAGE_LINK text,
    PERSONALITY text,
    WEIGHT integer CHECK (WEIGHT > 0),
    ENERGY_LEVEL text CHECK (ENERGY_LEVEL IN ('Low', 'Medium-low', 'Medium', 'Medium-high', 'High')),
    CONSTRAINT unique_puppy_collars UNIQUE (LITTER_ID, COLLAR_COLOR),
    CONSTRAINT check_is_retired CHECK ((IS_RETIRED = 1 AND IS_AVAILABLE = 0) OR (IS_RETIRED = 0)),
    CONSTRAINT check_is_available CHECK ((IS_AVAILABLE = 1 AND COLLAR_COLOR IS NOT NULL AND DOG_NAME IS NULL) OR (IS_AVAILABLE = 0)),
    FOREIGN KEY (MATCHED_WITH) REFERENCES Dogs (ID),
    FOREIGN KEY (LITTER_ID) REFERENCES Litters (ID) ON DELETE CASCADE
);

CREATE TABLE Moms (
    ID integer PRIMARY KEY AUTOINCREMENT,
    MOM_NAME text NOT NULL UNIQUE,
    HAS_DELIVERED boolean CHECK (HAS_DELIVERED IN (0, 1)) NOT NULL,
    IS_EXPECTING boolean CHECK (IS_EXPECTING IN (0, 1)) NOT NULL,
    FOREIGN KEY (MOM_NAME) REFERENCES Dogs (DOG_NAME),
    CONSTRAINT check_has_delivered CHECK ((HAS_DELIVERED = 1 AND IS_EXPECTING = 0) OR (HAS_DELIVERED = 0 AND IS_EXPECTING = 1))
);

CREATE INDEX IF NOT EXISTS idx_moms_dog_id ON Moms (MOM_NAME);

CREATE TABLE Images (
    ID integer PRIMARY KEY AUTOINCREMENT,
    URL text UNIQUE NOT NULL,
    IS_GROUP_PHOTO boolean
);

CREATE TABLE DIL (
    ID integer PRIMARY KEY AUTOINCREMENT,
    IMAGE_ID integer NOT NULL,
    DOG_ID integer NOT NULL,
    LITTER_ID integer NOT NULL,
    FOREIGN KEY (IMAGE_ID) REFERENCES Images (ID),
    FOREIGN KEY (DOG_ID) REFERENCES Dogs (ID),
    FOREIGN KEY (LITTER_ID) REFERENCES Litters (ID)
);

